DROP TABLE CART CASCADE CONSTRAINTS;
CREATE TABLE CART(
CART_ID NUMBER(10) PRIMARY KEY,
CART_QUANTITY NUMBER(10),
IP_ADD VARCHAR2(255)

);

DROP SEQUENCE CART_SEQ;
CREATE SEQUENCE CART_SEQ START WITH 1;

DROP TABLE CATEGORIES CASCADE CONSTRAINTS;
CREATE TABLE CATEGORIES(
CATEGORY_ID NUMBER(10) PRIMARY KEY,
CATEGORY_NAME VARCHAR2(50) ,
CATEGORY_DESC VARCHAR2(300) 
);

DROP SEQUENCE CATEGORY_SEQ;
CREATE SEQUENCE CATEGORY_SEQ START WITH 1;

DROP TABLE TRADER CASCADE CONSTRAINTS;
CREATE TABLE TRADER(
TRADER_ID NUMBER(10) PRIMARY KEY,
TRADER_NAME VARCHAR2(50) ,
TRADER_EMAIL VARCHAR2(50) ,
TRADER_PASSWORD VARCHAR2(50) ,
TRADER_ADDRESS VARCHAR2(100) ,
TRADER_NUMBER VARCHAR2(100) ,
TRADER_IMAGE VARCHAR2(100) ,
STATUST NUMBER(10),
CATEGORY_ID NUMBER(10) REFERENCES CATEGORIES(CATEGORY_ID) ON DELETE CASCADE
);

DROP SEQUENCE TRADER_SEQ;
CREATE SEQUENCE TRADER_SEQ START WITH 1;

DROP TABLE CUSTOMER CASCADE CONSTRAINTS;
CREATE TABLE CUSTOMER(
CUSTOMER_ID NUMBER(30) PRIMARY KEY,
CUSTOMER_NAME VARCHAR2(100) ,
CUSTOMER_EMAIL VARCHAR2(50) ,
CUSTOMER_PASSWORD VARCHAR2(50) ,
CUSTOMER_ADDRESS VARCHAR2(100) ,
CUSTOMER_NUMBER NUMBER(20) ,
CUSTOMER_IMAGE VARCHAR2(100),
CUSTOMER_IP VARCHAR2(255),
STATUS NUMBER(10)
);

DROP SEQUENCE CUSTOMER_SEQ;
CREATE SEQUENCE CUSTOMER_SEQ START WITH 1;

DROP TABLE CUSTOMER_ORDER CASCADE CONSTRAINTS;
CREATE TABLE CUSTOMER_ORDER(
ORDER_ID NUMBER(10) PRIMARY KEY,
ORDER_AMOUNT VARCHAR2(255) ,
ORDER_INVOICE VARCHAR2(255) ,
ORDER_DATE DATE ,
ORDER_STATUS VARCHAR2(255) ,
CUSTOMER_ID NUMBER(30) REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE,
CART_ID NUMBER(10) REFERENCES CART(CART_ID) ON DELETE CASCADE,
PRODUCT_ID NUMBER(10) REFERENCES PRODUCT(PRODUCT_ID) ON DELETE CASCADE,
QTY NUMBER(10)
);

DROP SEQUENCE ORDER_SEQ;
CREATE SEQUENCE ORDER_SEQ START WITH 1;

DROP TABLE PAYMENT CASCADE CONSTRAINTS;
CREATE TABLE PAYMENT(
PAYMENT_ID NUMBER(10) PRIMARY KEY,
PAYMENT_DATE DATE ,
PAYMENT_MODE VARCHAR2(50) ,
PAYMENT_REF NUMBER(10) ,
PAYMENT_CODE NUMBER(10) ,
ORDER_ID NUMBER(10) REFERENCES CUSTOMER_ORDER(ORDER_ID) ON DELETE CASCADE
);

DROP SEQUENCE PAYMENT_SEQ;
CREATE SEQUENCE PAYMENT_SEQ START WITH 1;

DROP TABLE PRODUCT CASCADE CONSTRAINTS;
CREATE TABLE PRODUCT(
PRODUCT_ID NUMBER(10) PRIMARY KEY,
PRODUCT_TITLE VARCHAR2(50) ,
PRODUCT_DATE DATE ,
PRODUCT_IMG1 VARCHAR2(1000) ,
PRODUCT_IMG2 VARCHAR2(1000) ,
PRODUCT_IMG3 VARCHAR2(1000) ,
PRODUCT_PRICE NUMBER(10) ,
PRODUCT_DESC VARCHAR2(300),
CATEGORY_ID NUMBER(10) REFERENCES CATEGORIES(CATEGORY_ID) ON DELETE CASCADE,
PRODUCT_QUANTITY NUMBER(10),
TRADER_ID NUMBER(10) REFERENCES TRADER(TRADER_ID) ON DELETE CASCADE
);

DROP SEQUENCE PRODUCT_SEQ;
CREATE SEQUENCE PRODUCT_SEQ START WITH 1;

DROP TABLE SLIDER CASCADE CONSTRAINTS;
CREATE TABLE SLIDER(
SLIDER_ID NUMBER(10) PRIMARY KEY,
SLIDER_NAME VARCHAR2(100) ,
SLIDER_IMAGE VARCHAR2(100) 
);


DROP SEQUENCE T_SEQ;
CREATE SEQUENCE T_SEQ START WITH 1;

DROP TABLE TIMESLOT CASCADE CONSTRAINTS;
CREATE TABLE TIMESLOT(
T_ID NUMBER(30) PRIMARY KEY,
C_DAY VARCHAR2(255),
C_TIME VARCHAR2(255),
C_CREATED DATE,
CUSTOMER_ID NUMBER(30) REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE,
ORDER_INVOICE VARCHAR2(255)
);

CREATE OR REPLACE TRIGGER  "CATEGORY_T" 
  before insert on "CATEGORIES"               
  for each row  
begin   
  if :NEW."CATEGORY_ID" is null then 
    select "CATEGORY_SEQ".nextval into :NEW."CATEGORY_ID" from dual; 
  end if; 
end; 

/
ALTER TRIGGER  "CATEGORY_T" ENABLE;

CREATE OR REPLACE TRIGGER  "TIME_T" 
  before insert on "TIMESLOT"               
  for each row  
begin   
  if :NEW."T_ID" is null then 
    select "T_SEQ".nextval into :NEW."T_ID" from dual; 
  end if; 
end; 

/
ALTER TRIGGER  "TIME_T" ENABLE;

CREATE OR REPLACE TRIGGER  "CART_T" 
  before insert on "CART"               
  for each row  
begin   
  if :NEW."CART_ID" is null then 
    select "CART_SEQ".nextval into :NEW."CART_ID" from dual; 
  end if; 
end; 

/
ALTER TRIGGER  "CART_T" ENABLE;


CREATE OR REPLACE TRIGGER  "CUSTOMER_T" 
  before insert on "CUSTOMER"               
  for each row  
begin   
  if :NEW."CUSTOMER_ID" is null then 
    select "CUSTOMER_SEQ".nextval into :NEW."CUSTOMER_ID" from dual; 
  end if; 
end; 

/
ALTER TRIGGER  "CUSTOMER_T" ENABLE;



CREATE OR REPLACE TRIGGER  "PRODUCT_T" 
  before insert on "PRODUCT"               
  for each row  
begin   
  if :NEW."PRODUCT_ID" is null then 
    select "PRODUCT_SEQ".nextval into :NEW."PRODUCT_ID" from dual; 
  end if; 
end; 

/
ALTER TRIGGER  "PRODUCT_T" ENABLE;

CREATE OR REPLACE TRIGGER  "CUSTOMERO_T" 
  before insert on "CUSTOMER_ORDER"               
  for each row  
begin   
  if :NEW."ORDER_ID" is null then 
    select "ORDER_SEQ".nextval into :NEW."ORDER_ID" from dual; 
  end if; 
end; 

/
ALTER TRIGGER  "CUSTOMERO_T" ENABLE;

CREATE OR REPLACE TRIGGER  "TRADER_T" 
  before insert on "TRADER"               
  for each row  
begin   
  if :NEW."TRADER_ID" is null then 
    select "TRADER_SEQ".nextval into :NEW."TRADER_ID" from dual; 
  end if; 
end; 

/
ALTER TRIGGER  "TRADER_T" ENABLE;





